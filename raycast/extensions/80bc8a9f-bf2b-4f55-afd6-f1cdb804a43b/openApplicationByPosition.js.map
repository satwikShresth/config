{
  "version": 3,
  "sources": ["../src/openApplicationByPosition.ts", "../src/HarpoonError.ts", "../src/helpers/getList.ts", "../src/helpers/getItemByIndex.ts"],
  "sourcesContent": ["import { LaunchProps, closeMainWindow, open, showHUD } from \"@raycast/api\";\nimport getItemByIndex from \"./helpers/getItemByIndex\";\n\nexport default async function openApplicationByPosition(\n  props: LaunchProps<{ arguments: Arguments.OpenApplicationByPosition }>\n) {\n  const position = parseInt(props.arguments.position, 10);\n\n  if (isNaN(position)) {\n    return await showHUD(\"Position must be a number\");\n  }\n\n  if (position < 1) {\n    return await showHUD(\"Position must be greater than 0\");\n  }\n\n  const item = await getItemByIndex(position - 1).catch(async () => {\n    await showHUD(`No application found at position ${position}`);\n  });\n\n  if (item) {\n    open(item.path, item.name);\n  }\n\n  await closeMainWindow();\n}\n", "export enum ErrorCode {\n  itemNotFound = \"ITEM_NOT_FOUND\",\n  unableToGetList = \"UNABLE_TO_GET_LIST\",\n  unableToSetList = \"UNABLE_TO_SET_LIST\",\n}\n\nconst errorMessages: Record<ErrorCode, string> = {\n  [ErrorCode.itemNotFound]: \"Unable to find application in list\",\n  [ErrorCode.unableToGetList]: \"Unable to get application list\",\n  [ErrorCode.unableToSetList]: \"Unable to set application list\",\n};\n\nexport default class HarpoonError extends Error {\n  public code: ErrorCode;\n\n  constructor(code: ErrorCode) {\n    super(errorMessages[code]);\n\n    this.name = \"HarpoonError\";\n    this.code = code;\n  }\n}\n", "import { LocalStorage } from \"@raycast/api\";\nimport HarpoonError, { ErrorCode } from \"../HarpoonError\";\nimport { AppList } from \"../models\";\n\nexport default async function getList(): Promise<AppList> {\n  const list = await LocalStorage.getItem<string>(\"defaultList\").catch(() => {\n    throw new HarpoonError(ErrorCode.unableToGetList);\n  });\n\n  return list ? JSON.parse(list) : [];\n}\n", "import HarpoonError, { ErrorCode } from \"../HarpoonError\";\nimport { App } from \"../models\";\nimport getList from \"./getList\";\n\nexport default async function getItemByIndex(index: number): Promise<App> {\n  const list = await getList();\n\n  if (!list[index]) {\n    throw new HarpoonError(ErrorCode.itemNotFound);\n  }\n\n  return list[index];\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAA4D,wBCM5D,IAAMC,EAA2C,CAC/C,CAAC,gBAAsB,EAAG,qCAC1B,CAAC,oBAAyB,EAAG,iCAC7B,CAAC,oBAAyB,EAAG,gCAC/B,EAEqBC,EAArB,cAA0C,KAAM,CAG9C,YAAYC,EAAiB,CAC3B,MAAMF,EAAcE,CAAI,CAAC,EAEzB,KAAK,KAAO,eACZ,KAAK,KAAOA,CACd,CACF,ECrBA,IAAAC,EAA6B,wBAI7B,eAAOC,GAAmD,CACxD,IAAMC,EAAO,MAAM,eAAa,QAAgB,aAAa,EAAE,MAAM,IAAM,CACzE,MAAM,IAAIC,sBAAsC,CAClD,CAAC,EAED,OAAOD,EAAO,KAAK,MAAMA,CAAI,EAAI,CAAC,CACpC,CCNA,eAAOE,EAAsCC,EAA6B,CACxE,IAAMC,EAAO,MAAMC,EAAQ,EAE3B,GAAI,CAACD,EAAKD,CAAK,EACb,MAAM,IAAIG,kBAAmC,EAG/C,OAAOF,EAAKD,CAAK,CACnB,CHTA,eAAOI,EACLC,EACA,CACA,IAAMC,EAAW,SAASD,EAAM,UAAU,SAAU,EAAE,EAEtD,GAAI,MAAMC,CAAQ,EAChB,OAAO,QAAM,WAAQ,2BAA2B,EAGlD,GAAIA,EAAW,EACb,OAAO,QAAM,WAAQ,iCAAiC,EAGxD,IAAMC,EAAO,MAAMC,EAAeF,EAAW,CAAC,EAAE,MAAM,SAAY,CAChE,QAAM,WAAQ,oCAAoCA,GAAU,CAC9D,CAAC,EAEGC,MACF,QAAKA,EAAK,KAAMA,EAAK,IAAI,EAG3B,QAAM,mBAAgB,CACxB",
  "names": ["openApplicationByPosition_exports", "__export", "openApplicationByPosition", "__toCommonJS", "import_api", "errorMessages", "HarpoonError", "code", "import_api", "getList", "list", "HarpoonError", "getItemByIndex", "index", "list", "getList", "HarpoonError", "openApplicationByPosition", "props", "position", "item", "getItemByIndex"]
}
